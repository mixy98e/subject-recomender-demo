﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace ModuleDependentSubjectsPrediction_CA
{
    public partial class ModuleDependentSubjects
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"GENDER", @"GENDER")      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"AVERAGE_GRADE", @"AVERAGE_GRADE"),new InputOutputColumnPair(@"FINAL_GRADE", @"FINAL_GRADE"),new InputOutputColumnPair(@"AVERAGE_OVERFLOW_EXAM", @"AVERAGE_OVERFLOW_EXAM"),new InputOutputColumnPair(@"CHOOSEN_MODULE_ID", @"CHOOSEN_MODULE_ID")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"GENDER",@"AVERAGE_GRADE",@"FINAL_GRADE",@"AVERAGE_OVERFLOW_EXAM",@"CHOOSEN_MODULE_ID"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"MODULE_DEPENDENT_SUB_PAIR", @"MODULE_DEPENDENT_SUB_PAIR"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastForest(new FastForestBinaryTrainer.Options(){NumberOfTrees=9,FeatureFraction=0.53248940948768F,LabelColumnName=@"MODULE_DEPENDENT_SUB_PAIR",FeatureColumnName=@"Features"}), labelColumnName: @"MODULE_DEPENDENT_SUB_PAIR"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
