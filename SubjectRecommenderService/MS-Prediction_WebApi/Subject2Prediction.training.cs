// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers;
using Microsoft.ML;

public partial class Subject2Prediction
{
    public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
    {
        var pipeline = BuildPipeline(context);
        var model = pipeline.Fit(trainData);

        return model;
    }

    /// <summary>
    /// build the pipeline that is used from model builder. Use this function to retrain model.
    /// </summary>
    /// <param name="mlContext"></param>
    /// <returns></returns>
    public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
    {
        // Data process configuration with pipeline data transformations
        var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"GENDER", @"GENDER")
                                .Append(mlContext.Transforms.ReplaceMissingValues(new[] { new InputOutputColumnPair(@"AGE", @"AGE"), new InputOutputColumnPair(@"AVERAGE_GRADE", @"AVERAGE_GRADE"), new InputOutputColumnPair(@"FINAL_GRADE", @"FINAL_GRADE"), new InputOutputColumnPair(@"NUMBER_OF_YEARS_STUDIED", @"NUMBER_OF_YEARS_STUDIED"), new InputOutputColumnPair(@"AVERAGE_TEST_TAKEN", @"AVERAGE_TEST_TAKEN"), new InputOutputColumnPair(@"MAX_TEST_TAKEN", @"MAX_TEST_TAKEN"), new InputOutputColumnPair(@"AVERAGE_OVERFLOW_EXAM", @"AVERAGE_OVERFLOW_EXAM"), new InputOutputColumnPair(@"CHOOSEN_MODULE_ID", @"CHOOSEN_MODULE_ID") }))
                                .Append(mlContext.Transforms.Concatenate(@"Features", new[] { @"GENDER", @"AGE", @"AVERAGE_GRADE", @"FINAL_GRADE", @"NUMBER_OF_YEARS_STUDIED", @"AVERAGE_TEST_TAKEN", @"MAX_TEST_TAKEN", @"AVERAGE_OVERFLOW_EXAM", @"CHOOSEN_MODULE_ID" }))
                                .Append(mlContext.Transforms.Conversion.MapValueToKey(@"CHOOSEN_SUBJECT_ID_2_BLOCK_A", @"CHOOSEN_SUBJECT_ID_2_BLOCK_A"))
                                .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))
                                .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator: mlContext.BinaryClassification.Trainers.LbfgsLogisticRegression(l1Regularization: 0.248821889479467F, l2Regularization: 0.180814408571339F, labelColumnName: @"CHOOSEN_SUBJECT_ID_2_BLOCK_A", featureColumnName: @"Features"), labelColumnName: @"CHOOSEN_SUBJECT_ID_2_BLOCK_A"))
                                .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

        return pipeline;
    }
}

